# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    users_security_bundle_public_pattern: '^/status'
    users_security_bundle_secured_pattern: '^/'
    users_security_bundle_access_control_path: '^/'
    git_repository_store_directory: '%env(resolve:GIT_REPOSITORY_STORE_DIRECTORY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $fileSourceReader: '@file_source.storage'
            $fileSourceWriter: '@file_source.storage'
            $gitRepositoryReader: '@git_repository.storage'
            $gitRepositoryWriter: '@git_repository.storage'
            $runSourceReader: '@run_source.storage'
            $runSourceWriter: '@run_source.storage'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Model/'
            - '../src/Request/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Controller\StatusController:
        tags: ['controller.service_arguments']
        arguments:
            $isReady: '%env(bool:IS_READY)%'

    Psr\Http\Message\RequestFactoryInterface:
        class: GuzzleHttp\Psr7\HttpFactory

    GuzzleHttp\HandlerStack:
        class: GuzzleHttp\HandlerStack
        factory: ['GuzzleHttp\HandlerStack', 'create']

    Psr\Http\Client\ClientInterface:
        class: GuzzleHttp\Client
        arguments:
            $config:
                handler: '@GuzzleHttp\HandlerStack'

    App\ArgumentResolver\SourceResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    Symfony\Component\Yaml\Parser:
        class: Symfony\Component\Yaml\Parser

    League\Flysystem\PathNormalizer:
        class: League\Flysystem\WhitespacePathNormalizer

    App\Services\GitRepositoryStore:
        arguments:
            $gitRepositoryBasePath: '%git_repository_store_directory%'

    app.services.remote_storage.client:
        class: AsyncAws\S3\S3Client
        arguments:
            -  endpoint: '%env(REMOTE_STORAGE_ENDPOINT)%'
               accessKeyId: '%env(REMOTE_STORAGE_KEY_ID)%'
               accessKeySecret: '%env(REMOTE_STORAGE_SECRET)%'

    App\Services\SourceRepository\Factory\Factory:
        arguments:
            $handlers:
                - '@App\Services\SourceRepository\Factory\FileSourceHandler'
                - '@App\Services\SourceRepository\Factory\GitSourceHandler'

    App\Services\SourceRepository\Reader\FileSourceReader:
        arguments:
            $reader: '@file_source.storage'

    App\Services\SourceRepository\Reader\UserGitRepositoryReader:
        arguments:
            $reader: '@git_repository.storage'

    App\Services\SourceRepository\Reader\Provider:
        arguments:
            $readers:
                - '@App\Services\SourceRepository\Reader\FileSourceReader'
                - '@App\Services\SourceRepository\Reader\UserGitRepositoryReader'
