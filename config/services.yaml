# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    users_security_bundle_firewall_pattern: '^/'
    users_security_bundle_access_control_pattern: '^/'
    file_source_store_directory: '%env(resolve:FILE_SOURCE_STORE_DIRECTORY)%'
    run_source_store_directory: '%env(resolve:RUN_SOURCE_STORE_DIRECTORY)%'
    git_repository_store_directory: '%env(resolve:GIT_REPOSITORY_STORE_DIRECTORY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $fileSourceFileStore: '@app.services.file_store_manager.file_source'
            $gitRepositoryFileStore: '@app.services.file_store_manager.git_repository'
            $runSourceFileStore: '@app.services.file_store_manager.run_source'
            $gitRepositoryPathFactory: '@app.services.path_factory.git_repository'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Model/'
            - '../src/Request/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    Psr\Http\Message\RequestFactoryInterface:
        class: GuzzleHttp\Psr7\HttpFactory

    GuzzleHttp\HandlerStack:
        class: GuzzleHttp\HandlerStack
        factory: ['GuzzleHttp\HandlerStack', 'create']

    Psr\Http\Client\ClientInterface:
        class: GuzzleHttp\Client
        arguments:
            $config:
                handler: '@GuzzleHttp\HandlerStack'

    App\ArgumentResolver\SourceResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    Symfony\Component\Yaml\Parser:
        class: Symfony\Component\Yaml\Parser

    League\Flysystem\PathNormalizer:
        class: League\Flysystem\WhitespacePathNormalizer

    filesystem.adapter.file_source_store:
        class: League\Flysystem\Local\LocalFilesystemAdapter
        arguments:
            $location: '%file_source_store_directory%'

    filesystem.adapter.run_source_store:
        class: League\Flysystem\Local\LocalFilesystemAdapter
        arguments:
            $location: '%run_source_store_directory%'

    filesystem.adapter.git_repository_store:
        class: League\Flysystem\Local\LocalFilesystemAdapter
        arguments:
            $location: '%git_repository_store_directory%'

    App\Services\FileStoreManager:
        autowire: false

    app.services.file_store_manager.file_source:
        class: App\Services\FileStoreManager
        public: true
        arguments:
            $filesystem: '@file_source.storage'

    app.services.file_store_manager.run_source:
        class: App\Services\FileStoreManager
        public: true
        arguments:
            $filesystem: '@run_source.storage'

    app.services.file_store_manager.git_repository:
        class: App\Services\FileStoreManager
        public: true
        arguments:
            $filesystem: '@git_repository.storage'

    App\Services\PathFactory:
        autowire: false

    app.services.path_factory.git_repository:
        class: App\Services\PathFactory
        arguments:
            $basePath: '%git_repository_store_directory%'
