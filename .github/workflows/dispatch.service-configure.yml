name: dispatch.service-configure

on:
  workflow_dispatch:
    inputs:
      version:
        description: Release version
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Dispatch service-configure event to image builder
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.IMAGE_BUILDER_TOKEN }}
          repository: smartassert/image-builder
          event-type: service-configure
          client-payload: |
            {
              "service_id": "sources",
              "build_configuration": "{\"version\": \"${{ github.event.inputs.version }}\"}"
            }

      - name: Dispatch service-configure event to instance manager
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.INSTANCE_MANAGER_TOKEN }}
          repository: smartassert/instance-manager
          event-type: service-configure
          client-payload: |
            {
              "service_id": "sources",
              "state_url": "http://{{ host }}/status",
              "health_check_url": "http://{{ host }}/health-check"
            }

      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare env_vars value for service-set-env event to instance manager
        id: service_set_env_env_vars
        run: |
          echo "::set-output name=value::$(jq -R . < ./build/instance-manager/env.json | tr -d '\n' | sed 's/""//g')"

      - name: Dispatch service-set-env event to instance manager
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.INSTANCE_MANAGER_TOKEN }}
          repository: smartassert/instance-manager
          event-type: service-set-env
          client-payload: |
            {
              "service_id": "sources",
              "env_vars": ${{ steps.service_set_env_env_vars.outputs.value }}
            }
